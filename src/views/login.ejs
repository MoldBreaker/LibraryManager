<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Login Form</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            height: 100vh;
            width: 100%;
            overflow: hidden;
            position: relative;
        }

        .background {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background-image: url('/images/header-slider/home-v1/header-slide.jpg');
            background-size: cover;
            background-position: center;
            filter: brightness(40%) blur(8px);
            transition: transform 0.3s ease-out;
            transform: scale(1.1);
        }

        .gradient-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(135deg, rgba(88, 28, 135, 0.3), rgba(30, 58, 138, 0.3));
            opacity: 0.7;
        }

        .container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            width: 100%;
        }

        .login-form {
            width: 100%;
            max-width: 420px;
            padding: 2rem;
            text-align: center;
            color: white;
            background-color: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(12px);
            border-radius: 12px;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            border: 1px solid rgba(255, 255, 255, 0.1);
            opacity: 0;
            transform: translateY(48px);
            transition: all 0.7s ease-out;
        }

        .login-form.visible {
            opacity: 1;
            transform: translateY(0);
        }

        h1 {
            font-size: 1.875rem;
            font-weight: 300;
            letter-spacing: 0.05em;
            margin-bottom: 0.5rem;
        }

        .subtitle {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.875rem;
            margin-bottom: 0.75rem;
        }

        .divider {
            height: 2px;
            width: 64px;
            background-color: rgba(255, 255, 255, 0.3);
            margin: 0.5rem auto 1.5rem;
        }

        .form-group {
            margin-bottom: 1.25rem;
            position: relative;
        }

        input {
            width: 100%;
            padding: 0.75rem 1rem;
            border: none;
            border-radius: 6px;
            background-color: rgba(255, 255, 255, 0.2);
            color: white;
            font-size: 1rem;
            outline: none;
            transition: all 0.3s;
        }

        input::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        input:focus {
            background-color: rgba(255, 255, 255, 0.3);
            box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.3);
        }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: rgba(255, 255, 255, 0.7);
            cursor: pointer;
            transition: color 0.2s;
        }

        .password-toggle:hover {
            color: rgba(255, 255, 255, 1);
        }

        .sign-in-btn {
            position: relative;
            width: 100%;
            padding: 0.75rem;
            background-image: linear-gradient(to right, #ec4899, #8b5cf6);
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            overflow: hidden;
            box-shadow: 0 10px 15px -3px rgba(236, 72, 153, 0.1);
            transition: all 0.3s;
            margin-bottom: 1.25rem;
        }

        .sign-in-btn:hover {
            box-shadow: 0 10px 15px -3px rgba(236, 72, 153, 0.3);
        }

        .sign-in-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: linear-gradient(to right, #db2777, #7c3aed);
            opacity: 0;
            transition: opacity 0.3s;
        }

        .sign-in-btn:hover::before {
            opacity: 1;
        }

        .sign-in-btn span {
            position: relative;
            z-index: 1;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .spinner {
            animation: spin 1s linear infinite;
            margin-right: 0.5rem;
            display: none;
        }

        @keyframes spin {
            from {
                transform: rotate(0deg);
            }

            to {
                transform: rotate(360deg);
            }
        }

        .form-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            font-size: 0.875rem;
        }

        .remember-me {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .checkbox-container {
            position: relative;
        }

        .checkbox {
            height: 16px;
            width: 16px;
            cursor: pointer;
            appearance: none;
            border: 1px solid rgba(255, 255, 255, 0.7);
            border-radius: 4px;
            background-color: transparent;
            transition: all 0.2s;
        }

        .checkbox:checked {
            border-color: #ec4899;
            background-color: #ec4899;
        }

        .checkbox-checkmark {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            pointer-events: none;
            color: white;
            opacity: 0;
            transition: opacity 0.2s;
        }

        .checkbox:checked+.checkbox-checkmark {
            opacity: 1;
        }

        label {
            color: rgba(255, 255, 255, 0.8);
            cursor: pointer;
            transition: color 0.2s;
        }

        label:hover {
            color: white;
        }

        .forgot-password {
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.2s;
        }

        .forgot-password:hover {
            color: white;
            text-decoration: underline;
        }

        .social-login {
            margin-top: 2rem;
        }

        .social-divider {
            position: relative;
            text-align: center;
            margin-bottom: 1.5rem;
        }

        .social-divider::before {
            content: "";
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background-color: rgba(255, 255, 255, 0.3);
        }

        .social-divider span {
            position: relative;
            background-color: transparent;
            padding: 0 0.75rem;
            font-size: 0.75rem;
            color: rgba(255, 255, 255, 0.7);
        }

        .social-buttons {
            display: flex;
            justify-content: center;
            gap: 1rem;
        }

        .social-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.5rem 1.25rem;
            background-color: transparent;
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 6px;
            color: white;
            font-size: 0.875rem;
            cursor: pointer;
            transition: all 0.3s;
        }

        .social-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
            border-color: rgba(255, 255, 255, 0.5);
        }

        .social-btn svg {
            width: 16px;
            height: 16px;
        }
    </style>
</head>

<body>
    <div class="background"></div>
    <div class="gradient-overlay"></div>

    <div class="container">
        <div class="login-form">
            <div>
                <h1>Login</h1>
                <p class="subtitle">Have an account?</p>
                <div class="divider"></div>
            </div>

            <form id="loginForm">
                <div class="form-group">
                    <input type="text" id="email" placeholder="Email" required>
                </div>

                <div class="form-group">
                    <input type="password" id="password" placeholder="Password" required>
                    <button type="button" class="password-toggle" id="togglePassword">
                        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                            stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                            <circle cx="12" cy="12" r="3"></circle>
                        </svg>
                    </button>
                </div>

                <button type="submit" class="sign-in-btn">
                    <span>
                        <svg class="spinner" width="16" height="16" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"
                                fill="none"></circle>
                            <path class="opacity-75" fill="currentColor"
                                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z">
                            </path>
                        </svg>
                        SIGN IN
                    </span>
                </button>

                <div class="form-footer">
                    <div class="remember-me">
                        <div class="checkbox-container">
                            <input type="checkbox" id="remember" class="checkbox">
                            <svg class="checkbox-checkmark" width="12" height="12" viewBox="0 0 12 12" fill="none"
                                xmlns="http://www.w3.org/2000/svg">
                                <path d="M3.5 6L5 7.5L8.5 4" stroke="currentColor" stroke-width="1.5"
                                    stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                        </div>
                        <label for="remember">Remember Me</label>
                    </div>
                    <a href="#" class="forgot-password">Forgot Password</a>
                </div>

                <div class="social-login">
                    <div class="social-divider">
                        <span>Or Sign In With</span>
                    </div>

                    <div class="social-buttons">
                        <button type="button" class="social-btn">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round">
                                <path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>
                            </svg>
                            Facebook
                        </button>
                        <button type="button" class="social-btn">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"
                                fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round">
                                <path
                                    d="M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z">
                                </path>
                            </svg>
                            Twitter
                        </button>
                    </div>
                    <div class="login-link">
                        Chưa có tài khoản? <a href="/register">Đăng ký</a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('loginForm');
            const signInBtn = document.querySelector('.sign-in-btn');
            const spinner = document.querySelector('.spinner');

            // Tạo phần tử errorMessage và thêm vào DOM
            const errorMessage = document.createElement('div');
            errorMessage.id = 'error-message';
            errorMessage.style.color = 'red';
            errorMessage.style.marginBottom = '1rem';
            form.prepend(errorMessage); // Thêm errorMessage vào đầu form


            // Show form with animation when page loads
            setTimeout(() => {
                document.querySelector('.login-form').classList.add('visible');
            }, 100);

            // Parallax effect for background
            document.addEventListener('mousemove', function (e) {
                const background = document.querySelector('.background');
                const x = e.clientX / window.innerWidth;
                const y = e.clientY / window.innerHeight;
                background.style.transform = `translate(${x * -20}px, ${y * -20}px) scale(1.1)`;
            });

            // Password visibility toggle
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('password');

            togglePassword.addEventListener('click', function () {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                this.innerHTML = type === 'password' ?
                    `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                <circle cx="12" cy="12" r="3"></circle>
            </svg>` :
                    `<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path>
                <line x1="1" y1="1" x2="23" y2="23"></line>
            </svg>`;
            });

            document.getElementById('loginForm').addEventListener('submit', async function (e) {
                e.preventDefault();
                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;

                try {
                    const response = await fetch('/login', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ Email: email, Password: password })
                    });

                    const data = await response.json();
                    localStorage.setItem('token', data.token);
                    if (!response.ok) throw new Error(data.error || 'Đăng nhập thất bại!');

                    localStorage.setItem('token', data.token);
                    //check user
                    const token = localStorage.getItem("token");

                    fetch("/api/user/current", {
                        method: "GET",
                        headers: {
                            "Authorization": `Bearer ${token}`,
                            "Content-Type": "application/json"
                        }
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            if(data.Role.RoleName.toLowerCase() === 'admin'){
                                window.location.replace("/dashboard");
                            } else {
                                window.location.replace("/");
                            }
                        })
                        .catch(error => {
                            alert("Error fetching user data:", error);
                        });

                } catch (error) {
                    alert(error.message);
                }
            });
        });
        // document.addEventListener("DOMContentLoaded", function () {
        //         fetch("/get-user-session")
        //             .then(response => response.json())
        //             .then(data => {
        //                 if (data.user) {
        //                     document.body.innerHTML = "<h2>Bạn đã đăng nhập. Chuyển hướng...</h2>";
        //                     setTimeout(() => {
        //                         window.location.href = "/";
        //                     }, 1000); 
        //                 }
        //             })
        //             .catch(error => console.error("Lỗi kiểm tra session:", error));
        //     });
        //         fetch("/login", {
        //             method: "POST",
        //             headers: { "Content-Type": "application/json" },
        //             body: JSON.stringify({ Email, Password }),
        //         })
        //         .then((res) => res.json())
        //         .then((data) => {
        //             if (data.success) {
        //             window.location.replace("/");
        //             } else {
        //             alert(data.error);
        //             }
        //         });
    </script>

</body>

</html>