<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Book - Library Management</title>
    <link rel="stylesheet" href="/css/admin.css">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Additional styles for the add book form */
        .form-container {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 24px;
            margin-bottom: 24px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }

        @media (max-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr;
            }
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #333;
        }

        .form-control {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .form-control:focus {
            border-color: #4361ee;
            outline: none;
            box-shadow: 0 0 0 2px rgba(67, 97, 238, 0.2);
        }

        .form-control.invalid {
            border-color: #e63946;
        }

        .error-message {
            color: #e63946;
            font-size: 12px;
            margin-top: 5px;
            display: none;
        }

        .error-message.visible {
            display: block;
        }

        .file-upload {
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 20px;
            border: 2px dashed #ddd;
            border-radius: 4px;
            background-color: #f9f9f9;
            transition: all 0.3s;
            cursor: pointer;
        }

        .file-upload:hover {
            border-color: #4361ee;
            background-color: #f0f4ff;
        }

        .file-upload input {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            opacity: 0;
            cursor: pointer;
        }

        .file-upload i {
            font-size: 24px;
            color: #4361ee;
            margin-bottom: 10px;
        }

        .file-upload p {
            margin: 0;
            color: #666;
        }

        .file-name {
            margin-top: 10px;
            font-size: 14px;
            color: #333;
            word-break: break-all;
            max-width: 100%;
            display: none;
        }

        .switch-container {
            display: flex;
            align-items: center;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
            margin-right: 10px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 24px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 16px;
            width: 16px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked+.slider {
            background-color: #4361ee;
        }

        input:focus+.slider {
            box-shadow: 0 0 1px #4361ee;
        }

        input:checked+.slider:before {
            transform: translateX(26px);
        }

        .status-text {
            font-size: 14px;
        }

        .category-list {
            max-height: 150px;
            overflow-y: auto;
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 10px;
        }

        .category-item {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }

        .category-item input {
            margin-right: 8px;
        }

        .btn-container {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 4px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            border: none;
        }

        .btn-primary {
            background-color: #4361ee;
            color: white;
        }

        .btn-primary:hover {
            background-color: #3a56d4;
        }

        .btn-secondary {
            background-color: #e9ecef;
            color: #495057;
        }

        .btn-secondary:hover {
            background-color: #dde2e6;
        }

        .preview-image {
            max-width: 100%;
            max-height: 150px;
            margin-top: 10px;
            border-radius: 4px;
            display: none;
        }

        .full-width {
            grid-column: 1 / -1;
        }
    </style>
</head>

<body>
    <div class="dashboard-container">
        <!-- Sidebar would be included here -->
        <%- include("sideBar") %>

            <!-- Main Content -->
            <main class="main-content">
                <!-- Header would be included here -->
                <%- include("header") %>

                    <!-- Content Area -->
                    <div class="content">
                        <div class="page-header">
                            <h1>Add New Book</h1>
                            <p>Add a new book to your library collection.</p>
                        </div>

                        <div class="form-container">
                            <form id="addBookForm" enctype="multipart/form-data">
                                <div class="form-grid">
                                    <!-- Book Cover Image -->
                                    <div class="form-group">
                                        <label for="image">Book Cover Image</label>
                                        <div class="file-upload" id="imageUpload">
                                            <input type="file" id="image" name="image" accept="image/*">
                                            <i class="fas fa-image"></i>
                                            <p>Click or drag to upload image</p>
                                        </div>
                                        <div class="file-name" id="imageFileName"></div>
                                        <img id="imagePreview" class="preview-image" src="/placeholder.svg"
                                            alt="Image preview">
                                        <div class="error-message" id="imageError">Please select a valid image file.
                                        </div>
                                    </div>

                                    <!-- Book PDF File -->
                                    <div class="form-group">
                                        <label for="file">Book PDF File</label>
                                        <div class="file-upload" id="pdfUpload">
                                            <input type="file" id="file" name="file" accept="application/pdf">
                                            <i class="fas fa-file-pdf"></i>
                                            <p>Click or drag to upload PDF</p>
                                        </div>
                                        <div class="file-name" id="pdfFileName"></div>
                                        <div class="error-message" id="fileError">Please select a valid PDF file.</div>
                                    </div>

                                    <!-- Book Title -->
                                    <div class="form-group">
                                        <label for="title">Book Title *</label>
                                        <input type="text" id="title" name="title" class="form-control" required>
                                        <div class="error-message" id="titleError">Title is required.</div>
                                    </div>

                                    <!-- Author -->
                                    <div class="form-group">
                                        <label for="author">Author *</label>
                                        <input type="text" id="author" name="author" class="form-control" required>
                                        <div class="error-message" id="authorError">Author is required.</div>
                                    </div>

                                    <!-- Publisher -->
                                    <div class="form-group">
                                        <label for="publisher">Publisher *</label>
                                        <input type="text" id="publisher" name="publisher" class="form-control"
                                            required>
                                        <div class="error-message" id="publisherError">Publisher is required.</div>
                                    </div>

                                    <!-- Publication Year -->
                                    <div class="form-group">
                                        <label for="year">Publication Year *</label>
                                        <input type="number" id="year" name="year" class="form-control" required>
                                        <div class="error-message" id="yearError">Year must be positive and not greater
                                            than current year.</div>
                                    </div>

                                    <!-- Price -->
                                    <div class="form-group">
                                        <label for="price">Price *</label>
                                        <input type="number" id="price" name="price" class="form-control" step="0.01"
                                            required>
                                        <div class="error-message" id="priceError">Price must be a positive number.
                                        </div>
                                    </div>

                                    <!-- Stock -->
                                    <div class="form-group">
                                        <label for="stock">Stock *</label>
                                        <input type="number" id="stock" name="stock" class="form-control" required>
                                        <div class="error-message" id="stockError">Stock must be greater than 0.</div>
                                    </div>

                                    <!-- Status -->
                                    <div class="form-group">
                                        <label>Status</label>
                                        <div class="switch-container">
                                            <label class="switch">
                                                <input type="checkbox" id="status" name="status" checked>
                                                <span class="slider"></span>
                                            </label>
                                            <span class="status-text" id="statusText">Available</span>
                                        </div>
                                    </div>

                                    <!-- Categories -->
                                    <div class="form-group full-width">
                                        <label>Categories *</label>
                                        <div class="category-list" id="categoryList">
                                            <!-- Categories would be dynamically loaded here -->


                                        </div>
                                        <div class="error-message" id="categoryError">Please select at least one
                                            category.</div>
                                    </div>
                                </div>

                                <div class="btn-container">
                                    <button type="button" class="btn btn-secondary" id="cancelBtn">Cancel</button>
                                    <button type="submit" class="btn btn-primary" id="submitBtn">Add Book</button>
                                </div>
                            </form>
                        </div>
                    </div>
            </main>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Get current year for validation
            const currentYear = new Date().getFullYear();

            // Set max year attribute
            document.getElementById('year').setAttribute('max', currentYear);

            // Image preview functionality
            const imageInput = document.getElementById('image');
            const imagePreview = document.getElementById('imagePreview');
            const imageFileName = document.getElementById('imageFileName');

            imageInput.addEventListener('change', function () {
                if (this.files && this.files[0]) {
                    const file = this.files[0];

                    // Check if file is an image
                    if (!file.type.match('image.*')) {
                        document.getElementById('imageError').classList.add('visible');
                        imagePreview.style.display = 'none';
                        imageFileName.style.display = 'none';
                        return;
                    }

                    document.getElementById('imageError').classList.remove('visible');

                    // Display file name
                    imageFileName.textContent = file.name;
                    imageFileName.style.display = 'block';

                    // Show image preview
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                    }
                    reader.readAsDataURL(file);
                }
            });

            // PDF file name display
            const pdfInput = document.getElementById('file');
            const pdfFileName = document.getElementById('pdfFileName');

            pdfInput.addEventListener('change', function () {
                if (this.files && this.files[0]) {
                    const file = this.files[0];

                    // Check if file is a PDF
                    if (file.type !== 'application/pdf') {
                        document.getElementById('fileError').classList.add('visible');
                        pdfFileName.style.display = 'none';
                        return;
                    }

                    document.getElementById('fileError').classList.remove('visible');

                    // Display file name
                    pdfFileName.textContent = file.name;
                    pdfFileName.style.display = 'block';
                }
            });

            // Status toggle
            const statusToggle = document.getElementById('status');
            const statusText = document.getElementById('statusText');

            statusToggle.addEventListener('change', function () {
                statusText.textContent = this.checked ? 'Available' : 'Unavailable';
            });

            // Form validation
            const form = document.getElementById('addBookForm');

            form.addEventListener('submit', function (e) {
                e.preventDefault();

                let isValid = true;

                // Title validation
                const title = document.getElementById('title');
                if (!title.value.trim()) {
                    document.getElementById('titleError').classList.add('visible');
                    title.classList.add('invalid');
                    isValid = false;
                } else {
                    document.getElementById('titleError').classList.remove('visible');
                    title.classList.remove('invalid');
                }

                // Author validation
                const author = document.getElementById('author');
                if (!author.value.trim()) {
                    document.getElementById('authorError').classList.add('visible');
                    author.classList.add('invalid');
                    isValid = false;
                } else {
                    document.getElementById('authorError').classList.remove('visible');
                    author.classList.remove('invalid');
                }

                // Publisher validation
                const publisher = document.getElementById('publisher');
                if (!publisher.value.trim()) {
                    document.getElementById('publisherError').classList.add('visible');
                    publisher.classList.add('invalid');
                    isValid = false;
                } else {
                    document.getElementById('publisherError').classList.remove('visible');
                    publisher.classList.remove('invalid');
                }

                // Year validation
                const year = document.getElementById('year');
                const yearValue = parseInt(year.value);
                if (!year.value || yearValue <= 0 || yearValue > currentYear) {
                    document.getElementById('yearError').classList.add('visible');
                    year.classList.add('invalid');
                    isValid = false;
                } else {
                    document.getElementById('yearError').classList.remove('visible');
                    year.classList.remove('invalid');
                }

                // Price validation
                const price = document.getElementById('price');
                if (!price.value || parseFloat(price.value) <= 0) {
                    document.getElementById('priceError').classList.add('visible');
                    price.classList.add('invalid');
                    isValid = false;
                } else {
                    document.getElementById('priceError').classList.remove('visible');
                    price.classList.remove('invalid');
                }

                // Stock validation
                const stock = document.getElementById('stock');
                if (!stock.value || parseInt(stock.value) <= 0) {
                    document.getElementById('stockError').classList.add('visible');
                    stock.classList.add('invalid');
                    isValid = false;
                } else {
                    document.getElementById('stockError').classList.remove('visible');
                    stock.classList.remove('invalid');
                }

                // Categories validation
                const categories = document.querySelectorAll('input[name="categoryIds"]:checked');
                if (categories.length === 0) {
                    document.getElementById('categoryError').classList.add('visible');
                    isValid = false;
                } else {
                    document.getElementById('categoryError').classList.remove('visible');
                }

                if (isValid) {
                    // Form is valid, you can submit it
                    alert('Book added successfully!');
                    // In a real application, you would submit the form data to the server here
                    // form.submit();
                }
            });

            // Cancel button
            document.getElementById('cancelBtn').addEventListener('click', function () {
                // Redirect to books list or dashboard
                window.location.href = '/dashboard';
            });

            const renderCategories = () => {
                fetch("/api/category", {
                    method: "GET"
                })
                    .then(res => res.json())
                    .then(categories => {
                        let htmlCategories = Array.from(categories).map(category => {
                            return `<div class="category-item">
                                    <input type="checkbox" id="${category.CategoryId}" name="categoryIds" value="${category.CategoryId}">
                                    <label for="${category.CategoryId}">${category.CategoryName}</label>
                                </div>`;
                        });
                        document.getElementById('categoryList').innerHTML = htmlCategories.join('');
                    })
                    .catch(error => alert(error))
            }
            renderCategories();

            document.getElementById("addBookForm").addEventListener("submit", async function (event) {
                event.preventDefault();

                let formData = new FormData();
                formData.append("image", document.getElementById("image").files[0]);  // Ảnh bìa
                formData.append("file", document.getElementById("file").files[0]);   // File PDF
                formData.append("title", document.getElementById("title").value);
                formData.append("author", document.getElementById("author").value);
                formData.append("publisher", document.getElementById("publisher").value);
                formData.append("year", document.getElementById("year").value);
                formData.append("price", document.getElementById("price").value);
                formData.append("stock", document.getElementById("stock").value);
                formData.append("status", document.getElementById("status").checked ? "true" : "false");

                let categories = [...document.querySelectorAll("#categoryList input:checked")].map(cb => cb.value);
                categories.forEach(id => formData.append("categoryIds", id));

                // console.log(categories);
                // return;
 
                try {
                    let response = await fetch("/api/book", {
                        method: "POST",
                        headers: {
                            "Authorization": `Bearer ${localStorage.getItem("token")}`,
                        },
                        body: formData
                    });

                    let result = await response.json();
                    if (response.ok) {
                        alert("Book added successfully!");
                        window.location.href = '/dashboard/book';
                    } else {
                        alert(`Error: ${result.message}`);
                    }
                } catch (error) {
                    console.error("Error adding book:", error);
                    alert("Something went wrong!");
                }
            });

        });
    </script>
</body>

</html>