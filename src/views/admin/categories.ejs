<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Books Management - Library Admin</title>
    <link rel="stylesheet" href="/css/admin.css">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>

<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <%- include("sideBar") %>

            <!-- Main Content -->
            <main class="main-content">
                <!-- Header -->
                <!-- <%- include("header") %> -->

                <!-- Content Area -->
                <div class="content">
                    <div class="page-header">
                        <h1>Categories Management</h1>
                    </div>

                    <!-- Action Bar -->
                    <div class="action-bar">
                        <div class="action-bar-left">
                            <div class="search-container">
                                <i class="fas fa-search"></i>
                                <input type="search" placeholder="Search books by title, author, ISBN...">
                            </div>
                        </div>
                        <div class="action-bar-right">
                            <button class="btn btn-primary">
                                <i class="fas fa-plus"></i>
                                <a href="#" style="color: white;">Add Category</a>
                            </button>                            
                        </div>
                    </div>

                    <!-- Books Table -->
                    <div class="card">
                        <div class="card-header">
                            <h2>Categories Collection</h2>
                        </div>
                        <div class="card-content">
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>Category Name</th>
                                            <th class="text-right">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="book-table">

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
    </div>

    <script src="/js/admin.js"></script>
    <script>
        const tableBody = document.getElementById('book-table');
        const searchInput = document.querySelector('.search-container input[type="search"]');

        let categories = [];

        // Fetch categories and render
        function fetchCategories() {
            fetch('/api/category')
                .then(res => res.json())
                .then(data => {
                    categories = data;
                    renderTable(data);
                })
                .catch(err => console.error('Error fetching categories:', err));
        }

        // Render table
        function renderTable(data) {
            tableBody.innerHTML = '';

            data.forEach(cat => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${cat.CategoryId}</td>
                    <td contenteditable="true" onblur="updateCategory(${cat.CategoryId}, this.innerText)">${cat.CategoryName}</td>
                    <td class="text-right">
                        <button class="btn btn-danger btn-sm" onclick="deleteCategory(${cat.CategoryId})">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                `;
                tableBody.appendChild(tr);
            });
        }

        // Add new category
        function addCategory(name) {
            fetch('/api/category', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ categoryName: name })
            })
                .then(res => res.json())
                .then(() => fetchCategories())
                .catch(error => {
                    console.log(error);
                    alert(error);
                })
        }

        // Update category
        function updateCategory(id, newName) {
            fetch('/api/category', {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ categoryId: id, categoryName: newName.trim() })
            })
                .then(res => res.json())
                .then(() => console.log('Category updated'))
                .catch(err => console.error('Update error:', err));
        }

        // Delete category
        function deleteCategory(id) {
            if (!confirm('Are you sure you want to delete this category?')) return;

            fetch(`/api/category/${id}`, { method: 'DELETE' })
                .then(res => res.json())
                .then(() => fetchCategories())
                .catch(err => console.error('Delete error:', err));
        }

        // Search category
        searchInput.addEventListener('input', () => {
            const query = searchInput.value.toLowerCase();
            const filtered = categories.filter(cat => cat.CategoryName.toLowerCase().includes(query));
            renderTable(filtered);
        });

        // Prompt to add new category
        const addBtn = document.querySelector('.btn-primary a');
        addBtn.addEventListener('click', function (e) {
            e.preventDefault();
            const name = prompt('Enter new category name:');
            if (name) addCategory(name.trim());
        });

        document.addEventListener('DOMContentLoaded', fetchCategories);
    </script>


</body>

</html>